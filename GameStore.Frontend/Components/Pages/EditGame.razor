@page "/editgame"
@page "/editgame/{Id:int}"
@rendermode InteractiveServer

@using GameStore.Frontend.Models
@inject NavigationManager NavigationManager 
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<PageTitle>@title - GameStore</PageTitle>

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-primary text-white py-4">
                    <div class="d-flex align-items-center">
                        <div class="game-icon bg-white bg-opacity-20 rounded-circle p-3 me-3">
                            <i class="bi bi-controller text-white fs-3"></i>
                        </div>
                        <div>
                            <h4 class="card-title mb-1 fw-bold">@title</h4>
                            <p class="mb-0 opacity-75">@(Id is null ? "Add a new game to your collection" : "Update your game details")</p>
                        </div>
                    </div>
                </div>
                
                <div class="card-body p-4">
                    @if (genres is null || game is null)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary mb-3" style="width: 3rem; height: 3rem;" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <h5 class="text-muted">Loading game details...</h5>
                            <p class="text-muted">Please wait while we prepare the form</p>
                        </div>
                    }
                    else 
                    {
                        <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="alert alert-danger rounded-3" />
                            
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label for="name" class="form-label fw-semibold text-dark">
                                        <i class="bi bi-tag me-2 text-primary"></i>Game Name
                                    </label>
                                    <InputText id="name" @bind-Value="game.Name" 
                                               class="form-control form-control-lg" 
                                               placeholder="Enter game name" />
                                    <ValidationMessage For="@(() => game.Name)" class="text-danger small mt-1" />
                                    <div class="form-text">Enter the full name of the game</div>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label for="genre" class="form-label fw-semibold text-dark">
                                        <i class="bi bi-tags me-2 text-primary"></i>Genre
                                    </label>
                                    <InputSelect id="genre" @bind-Value="game.GenreId" 
                                                 class="form-select form-select-lg">
                                        <option value="">-- Select Genre --</option>
                                        @foreach (var genre in genres)
                                        {
                                            <option value="@genre.Id">@genre.Name</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => game.GenreId)" class="text-danger small mt-1" />
                                    <div class="form-text">Choose the appropriate genre</div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label for="price" class="form-label fw-semibold text-dark">
                                        <i class="bi bi-currency-dollar me-2 text-primary"></i>Price
                                    </label>
                                    <div class="input-group input-group-lg">
                                        <span class="input-group-text bg-light border-end-0">$</span>
                                        <InputNumber id="price" @bind-Value="game.Price" 
                                                     class="form-control border-start-0" 
                                                     placeholder="0.00" />
                                    </div>
                                    <ValidationMessage For="@(() => game.Price)" class="text-danger small mt-1" />
                                    <div class="form-text">Enter the price between $0 and $100</div>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label for="releaseDate" class="form-label fw-semibold text-dark">
                                        <i class="bi bi-calendar me-2 text-primary"></i>Release Date
                                    </label>
                                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" 
                                               class="form-control form-control-lg" />
                                    <div class="form-text">Select the official release date</div>
                                </div>
                            </div>

                            <!-- Preview Section -->
                            <div class="card bg-light border-0 mb-4">
                                <div class="card-body">
                                    <h6 class="fw-semibold mb-3">
                                        <i class="bi bi-eye me-2 text-primary"></i>Preview
                                    </h6>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <small class="text-muted">Game Name:</small>
                                            <p class="fw-semibold mb-2">@(string.IsNullOrEmpty(game.Name) ? "No name entered" : game.Name)</p>
                                        </div>
                                        <div class="col-md-6">
                                            <small class="text-muted">Genre:</small>
                                            <p class="mb-2">
                                                @if (game.GenreId > 0)
                                                {
                                                    <span class="badge badge-genre">
                                                        @genres.FirstOrDefault(g => g.Id == game.GenreId)?.Name
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No genre selected</span>
                                                }
                                            </p>
                                        </div>
                                        <div class="col-md-6">
                                            <small class="text-muted">Price:</small>
                                            <p class="fw-semibold text-success mb-2">@game.Price.ToString("C")</p>
                                        </div>
                                        <div class="col-md-6">
                                            <small class="text-muted">Release Date:</small>
                                            <p class="mb-0">@game.ReleaseDate.ToString("MMM dd, yyyy")</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex gap-3 mt-4 pt-3 border-top">
                                <button type="submit" class="btn btn-primary btn-lg px-5 d-flex align-items-center">
                                    <i class="bi bi-check-circle me-2"></i>
                                    @(Id is null ? "Create Game" : "Update Game")
                                </button>
                               <a role="button" class="btn btn-outline-secondary btn-lg px-4 d-flex align-items-center" href="/catalog">
                                    <i class="bi bi-arrow-left me-2"></i>
                                    Back to Catalog
                               </a>
                                @if (Id is not null)
                                {
                                    <a role="button" class="btn btn-outline-danger btn-lg px-4 d-flex align-items-center ms-auto" 
                                       href="/home">
                                        <i class="bi bi-x-circle me-2"></i>
                                        Cancel
                                    </a>
                                }
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private GameDetails? game { get; set; }
    private Genre[]? genres;

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        if (game is not null) return;
        
        if (Id is not null)
        {
            game = GamesClient.GetGame(Id.Value);
            title = $"Edit {game?.Name ?? "Game"}";
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                GenreId = 0,
                Price = 0,
                ReleaseDate = DateOnly.FromDateTime(DateTime.Now)
            };
            title = "Add New Game";
        }
    }

    protected override void OnInitialized()
    {
        genres = GenresClient.GetGenres();
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(game);

        if (Id is null)
        {
            GamesClient.AddGame(game); 
        }
        else
        {
            game.Id = Id.Value;
            GamesClient.UpdateGame(game);
        }
      
        NavigationManager.NavigateTo("/");
    }
}